<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="ClosedButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="24"/>
        <Setter Property="Width" Value="24"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                        x:Name="B"
                        Background="#FF1000"
                        CornerRadius="25"
                        >
                        <Path Fill="White" Data="{DynamicResource x}"
                              Height="10"
                              Width="10"
                              Stretch="Uniform"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#C70001"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="#FF1000"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#7E0000"/>
                        </Trigger>


                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>




    </Style>
    
    <Style x:Key="MinimizedButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="24"/>
        <Setter Property="Width" Value="24"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                        x:Name="B"
                        Background="#F6BA06"
                        CornerRadius="25"
                        >
                        <Path Fill="White" Data="{DynamicResource minus}"
                              Height="13"
                              Width="13"
                              Stretch="Uniform"
                              />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#E3AC05"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="#F6BA06"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#F05C00"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MaximizedButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="24"/>
        <Setter Property="Width" Value="24"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                        x:Name="B"
                        Background="#18FF37"
                        CornerRadius="25"
                        >
                        <Path Fill="White" Data="{DynamicResource border}"
                              Height="10"
                              Width="10"
                              Stretch="Uniform"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#14D82E"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="#18FF37"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#66FF99"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LoginButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="140"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                        x:Name="B"
                        CornerRadius="5"
                        Background="{DynamicResource btncolor}"
                        >
                        <Label
                            FontFamily="Jetbrains Mono"
                            FontWeight="SemiBold"
                            Foreground="{DynamicResource FirstColor}"
                            FontSize="{TemplateBinding FontSize}"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            Content="{TemplateBinding Content}"/>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="{DynamicResource btnMouseEnter}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="{DynamicResource btncolor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B" Property="Background" Value="{DynamicResource btnMouseClick}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="PasswordHidden" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                        x:Name="B"
                        CornerRadius="5"
                        >
                        <Path Fill="Black" 
                              Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                              Height="15"
                              Width="15"
                              Stretch="Uniform"/>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuButton" TargetType="{x:Type RadioButton}">
        <Setter Property="Height" Value="45"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Margin" Value="0 3 0 3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="B" CornerRadius="5">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="6"/>
                                <ColumnDefinition Width="20"/>
                                <ColumnDefinition Width="180"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="Indicator" Grid.Column="0"
                                    Height="45"
                                    CornerRadius="5"
                                    Visibility="Collapsed"
                                    Background="{DynamicResource SixthColor}"/>
                            <Border 
                                Grid.Column="1"
                                Background="Transparent">
                            </Border>

                            <Border
                                Grid.Column="2"
                                CornerRadius="5"
                                x:Name="IconPath">
                                <Grid >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="40"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <Path 
                                        Grid.Column="0"
                                        x:Name="Icon" 
                                        Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"
                                        Fill="{DynamicResource BorderColor}"
                                        Height="20"
                                        Stretch="Uniform"/>

                                    <Label 
                                       Grid.Column="1"
                                       x:Name="Label"
                                       FontSize="{TemplateBinding FontSize}"
                                       Content="{TemplateBinding Content}"
                                       FontFamily="Arial"
                                       Foreground="{DynamicResource BorderColor}"
                                       FontWeight="DemiBold"
                                       VerticalAlignment="Center"/>
                                </Grid>
                            </Border>

                            

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="IconPath" Property="Background" Value="{DynamicResource SeventhColor}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="IconPath" Property="Background" Value="{DynamicResource SixthColor}"/>
                            <Setter TargetName="Indicator" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="Label" Property="Foreground" Value="{DynamicResource FirstColor}"/>
                            <Setter TargetName="Icon" Property="Fill" Value="{DynamicResource FirstColor}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SwitchButton" TargetType="{x:Type CheckBox}">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <StackPanel>
                        <Grid>
                            <Border x:Name="backgr"
                                    Width="30"
                                    Height="20"
                                    Background="#edf6f9"
                                    CornerRadius="10" 
                                    Margin="0"/>
                            <Border x:Name="button"
                                    Height="20"
                                    Width="20"
                                    CornerRadius="12.5"
                                    HorizontalAlignment="Left"/>
                        </Grid>
                        <ContentPresenter x:Name="content"
                                          Margin="10 0 0 0"
                                          Content="{TemplateBinding Content}"
                                          VerticalAlignment="Center"/>
                    </StackPanel>
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="right">
                            <ThicknessAnimation Storyboard.TargetProperty="Margin"
                                                Storyboard.TargetName="button"
                                                Duration="0:0:0:0.5"
                                                From="0,0,0,0"
                                                To="10,0,0,0">
                                <ThicknessAnimation.EasingFunction>
                                    <CircleEase EasingMode="EaseInOut">
                                    </CircleEase>
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                        </Storyboard>
                        <Storyboard x:Key="left">
                            <ThicknessAnimation Storyboard.TargetProperty="Margin"
                                                Storyboard.TargetName="button"
                                                Duration="0:0:0:0.5"
                                                From="10,0,0,0"
                                                To="0,0,0,0">
                                <ThicknessAnimation.EasingFunction>
                                    <CircleEase EasingMode="EaseInOut">
                                    </CircleEase>
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="leftt"/>
                                <BeginStoryboard Storyboard="{StaticResource right}" x:Name="rightt"/>
                            </Trigger.ExitActions>
                            <Setter TargetName="button"
                                    Property="Background"
                                    Value="{DynamicResource FirstColor}"/>
                            <Setter TargetName="backgr"
                                    Property="Background"
                                    Value="#343a40"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="rightt"/>
                                <BeginStoryboard Storyboard="{StaticResource left}" x:Name="leftt"/>
                            </Trigger.ExitActions>
                            <Setter TargetName="button" Property="Background" Value="{DynamicResource FirstColor}"/>
                                <Setter TargetName="backgr" Property="Background" Value="#edf6f9"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="rectangle"
                            SnapsToDevicePixels="True"
                            Background="Gray"
                            Opacity="0.3"
                            CornerRadius="4"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="rectangle" Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>

        <Setter Property="Width" Value="14"/>
        <Setter Property="Margin" Value="-14 0 0 0" />
        <Setter Property="MinWidth" Value="{Binding Height, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">

                        <Border Padding="0 4">
                            <Track x:Name="PART_Track"
                                IsDirectionReversed="true"
                                IsEnabled="{TemplateBinding IsMouseOver}"
                                Width="8"
                                HorizontalAlignment="Center"
                           >
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Opacity="0" Command="{x:Static ScrollBar.PageUpCommand}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Opacity="0" Command="{x:Static ScrollBar.PageDownCommand}" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumb  }" />
                                </Track.Thumb>
                            </Track>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ViewerScrollBar" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="DeleteButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="24"/>
        <Setter Property="Width" Value="24"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                        x:Name="B"
                        Background="White"
                        BorderBrush="Gray"
                        BorderThickness="0.5"
                        CornerRadius="25"
                        >
                        <Path Fill="#215F9D" 
                              Data="{DynamicResource delete}"
                              Height="20"
                              Width="20"
                              Stretch="Uniform"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#E5E5E5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="white"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#CCCCCC"/>
                        </Trigger>


                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>